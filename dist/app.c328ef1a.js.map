{"version":3,"sources":["app.js"],"names":["container","document","getElementById","ajax","XMLHttpRequest","content","createElement","NEWS_URL","CONTENT_URL","store","currentPage","getData","url","open","send","JSON","parse","response","newsFeed","newsList","push","i","id","title","comments_count","innerHTML","join","newsDetail","location","hash","substring","newsContent","replace","router","routePath","indexOf","Number","window","addEventListener"],"mappings":"AAAA,IAAMA,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlB;AACA,IAAMC,IAAI,GAAG,IAAIC,cAAJ,EAAb;AACA,IAAMC,OAAO,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAhB;AACA,IAAMC,QAAQ,GAAG,sCAAjB;AACA,IAAMC,WAAW,GAAG,wCAApB;AACA,IAAMC,KAAK,GAAG;EACZC,WAAW,EAAE;AADD,CAAd,EAIA;;AACA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;EACpB;EACAT,IAAI,CAACU,IAAL,CAAU,KAAV,EAAiBD,GAAjB,EAAsB,KAAtB,EAFoB,CAGpB;;EACAT,IAAI,CAACW,IAAL,GAJoB,CAMpB;;EACA,OAAOC,IAAI,CAACC,KAAL,CAAWb,IAAI,CAACc,QAAhB,CAAP;AACD,EAED;;;AACA,SAASC,QAAT,GAAoB;EACpB,IAAMA,QAAQ,GAAGP,OAAO,CAACJ,QAAD,CAAxB,CADoB,CAEpB;;EACA,IAAMY,QAAQ,GAAG,EAAjB,CAHoB,CAMpB;;EACAA,QAAQ,CAACC,IAAT,CAAc,MAAd;;EAEA,KAAI,IAAIC,CAAC,GAAG,CAACZ,KAAK,CAACC,WAAN,GAAoB,CAArB,IAA0B,EAAtC,EAA0CW,CAAC,GAAGZ,KAAK,CAACC,WAAN,GAAoB,EAAlE,EAAsEW,CAAC,EAAvE,EAA2E;IACzE;IACAF,QAAQ,CAACC,IAAT,8CAEsBF,QAAQ,CAACG,CAAD,CAAR,CAAYC,EAFlC,wBAGMJ,QAAQ,CAACG,CAAD,CAAR,CAAYE,KAHlB,eAG4BL,QAAQ,CAACG,CAAD,CAAR,CAAYG,cAHxC;EAOD;;EACDL,QAAQ,CAACC,IAAT,CAAc,OAAd,EAnBoB,CAqBpB;;EACAD,QAAQ,CAACC,IAAT,2CAEsBX,KAAK,CAACC,WAAN,GAAoB,CAF1C,0EAGsBD,KAAK,CAACC,WAAN,GAAoB,CAH1C,yDAtBoB,CA6BpB;;EACAV,SAAS,CAACyB,SAAV,GAAsBN,QAAQ,CAACO,IAAT,CAAc,EAAd,CAAtB;AACC;;AAAA,EAMD;;AACA,SAASC,UAAT,GAAsB;EACpB;EACA,IAAML,EAAE,GAAGM,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwB,CAAxB,CAAX,CAFoB,CAIpB;;EACA,IAAMC,WAAW,GAAGpB,OAAO,CAACH,WAAW,CAACwB,OAAZ,CAAoB,KAApB,EAA2BV,EAA3B,CAAD,CAA3B;EACA,IAAMC,KAAK,GAAGtB,QAAQ,CAACK,aAAT,CAAuB,IAAvB,CAAd,CANoB,CAQpB;;EACAN,SAAS,CAACyB,SAAV,qBACMM,WAAW,CAACR,KADlB,sDAIoBd,KAAK,CAACC,WAJ1B;AAOD,EAED;;;AACA,SAASuB,MAAT,GAAkB;EAChB;EACA,IAAMC,SAAS,GAAGN,QAAQ,CAACC,IAA3B,CAFgB,CAIhB;EACA;EACA;;EACA,IAAIK,SAAS,KAAK,EAAlB,EAAsB;IACpB;IACAhB,QAAQ,GAFY,CAGpB;EACD,CAJD,MAIO,IAAIgB,SAAS,CAACC,OAAV,CAAkB,SAAlB,KAAgC,CAApC,EAAuC;IAC5C1B,KAAK,CAACC,WAAN,GAAoB0B,MAAM,CAACF,SAAS,CAACJ,SAAV,CAAoB,CAApB,CAAD,CAA1B;IACAZ,QAAQ;EACT,CAHM,MAGA;IACL;IACAS,UAAU;EACX;AACF;;AAAA,EAED;AACA;;AACAU,MAAM,CAACC,gBAAP,CAAwB,YAAxB,EAAsCL,MAAtC;AAEAA,MAAM","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["const container = document.getElementById('root');\r\nconst ajax = new XMLHttpRequest();\r\nconst content = document.createElement('div');\r\nconst NEWS_URL = 'https://api.hnpwa.com/v0/news/1.json';\r\nconst CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json';\r\nconst store = {\r\n  currentPage: 1,\r\n};\r\n\r\n// ajax 동작 수행처리 함수\r\nfunction getData(url) {\r\n  // 긁어올 페이지를 오픈\r\n  ajax.open('GET', url, false);\r\n  // 데이터를 전송\r\n  ajax.send();\r\n\r\n  // 함수처리의 결과물을 반환\r\n  return JSON.parse(ajax.response);\r\n}\r\n\r\n// 뉴스 제목\r\nfunction newsFeed() {\r\nconst newsFeed = getData(NEWS_URL);\r\n// ul 태그 안 쪽에 li a 태그를 10묶음 처리 해야하기 때문에 배열 이용\r\nconst newsList = [];\r\n\r\n\r\n// 배열 안에 먼저 ul태그 삽입\r\nnewsList.push('<ul>');\r\n\r\nfor(let i = (store.currentPage - 1) * 10; i < store.currentPage * 10; i++) {\r\n  // 목록 UI\r\n  newsList.push(`\r\n    <li>\r\n      <a href=\"#/show/${newsFeed[i].id}\">\r\n      ${newsFeed[i].title} (${newsFeed[i].comments_count})\r\n      </a>\r\n    </li>\r\n  `);\r\n}\r\nnewsList.push('</ul>');\r\n\r\n// 네비게이션 ui\r\nnewsList.push(`\r\n  <div>\r\n    <a href=\"#/page/${store.currentPage - 1}\">이전 페이지</a>\r\n    <a href=\"#/page/${store.currentPage + 1}\">다음 페이지</a>\r\n  </div>\r\n`);\r\n\r\n// 덮어씌우기\r\ncontainer.innerHTML = newsList.join('');\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// 뉴스 내용\r\nfunction newsDetail() {\r\n  // hash를 알아내기(맨 앞의 #제거버젼)\r\n  const id = location.hash.substring(7);\r\n  \r\n  // content_url 변수에 있는 @id(임시)를 알아낸 id값으로 대체\r\n  const newsContent = getData(CONTENT_URL.replace('@id', id));\r\n  const title = document.createElement('h1');\r\n  \r\n  // 글 내용 UI\r\n  container.innerHTML = `\r\n  <h1>${newsContent.title}</h1>\r\n  \r\n  <div>\r\n    <a href=\"#/page/${store.currentPage}\">목록으로</a>\r\n  </div>\r\n  `;\r\n}\r\n\r\n// 화면 전환을 위한 router\r\nfunction router() {\r\n  // hash 알아내기\r\n  const routePath = location.hash;\r\n\r\n  // routePath가 비어있을 때(hash가 비어있을 때) === 첫 진입\r\n  // '목록으로' 또한 hash가 비어있기 때문에 newsFeed로 연결됨\r\n  // location.hash의 값에 #만 존재하면 빈 값으로 처리됨\r\n  if (routePath === '') {\r\n    // 뉴스 제목 가져오기\r\n    newsFeed();\r\n    // 해당 문자열이 있으면 0이상의 위치값, 없으면 -1 반환\r\n  } else if (routePath.indexOf('#/page/') >= 0) { \r\n    store.currentPage = Number(routePath.substring(7));\r\n    newsFeed();\r\n  } else {\r\n    // 뉴스 글 가져오기\r\n    newsDetail();\r\n  }\r\n};\r\n\r\n// window객체\r\n// hashchange를 화면전환을 위한 트리거로 사용(router를 연결)\r\nwindow.addEventListener('hashchange', router);\r\n\r\nrouter();"]}