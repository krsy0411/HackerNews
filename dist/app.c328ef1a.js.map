{"version":3,"sources":["app.js"],"names":["container","document","getElementById","ajax","XMLHttpRequest","content","createElement","NEWS_URL","CONTENT_URL","store","currentPage","feeds","getData","url","open","send","JSON","parse","response","makeFeeds","i","length","read","newsFeed","newsList","template","push","id","title","comments_count","user","points","time_ago","replace","join","innerHTML","newsDetail","location","hash","substring","newsContent","Number","makeComment","comments","called","commentString","router","routePath","indexOf","window","addEventListener"],"mappings":"AAAA,IAAMA,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlB;AACA,IAAMC,IAAI,GAAG,IAAIC,cAAJ,EAAb;AACA,IAAMC,OAAO,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAhB;AACA,IAAMC,QAAQ,GAAG,sCAAjB;AACA,IAAMC,WAAW,GAAG,wCAApB;AACA,IAAMC,KAAK,GAAG;EACZC,WAAW,EAAE,CADD;EAEZC,KAAK,EAAE;AAFK,CAAd,EAKA;;AACA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;EACpB;EACAV,IAAI,CAACW,IAAL,CAAU,KAAV,EAAiBD,GAAjB,EAAsB,KAAtB,EAFoB,CAGpB;;EACAV,IAAI,CAACY,IAAL,GAJoB,CAMpB;;EACA,OAAOC,IAAI,CAACC,KAAL,CAAWd,IAAI,CAACe,QAAhB,CAAP;AACD,EACD;;;AACA,SAASC,SAAT,CAAmBR,KAAnB,EAA0B;EACxB,KAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,KAAK,CAACU,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;IACrCT,KAAK,CAACS,CAAD,CAAL,CAASE,IAAT,GAAgB,KAAhB;EACD;;EAED,OAAOX,KAAP;AACD,EAED;;;AACA,SAASY,QAAT,GAAoB;EAClB;EACF,IAAIA,QAAQ,GAAGd,KAAK,CAACE,KAArB,CAFoB,CAGpB;;EACA,IAAMa,QAAQ,GAAG,EAAjB,CAJoB,CAKpB;;EACA,IAAIC,QAAQ,mtBAAZ,CANoB,CA+BpB;;EACA,IAAIF,QAAQ,CAACF,MAAT,KAAoB,CAAxB,EAA2B;IACzBE,QAAQ,GAAGd,KAAK,CAACE,KAAN,GAAcQ,SAAS,CAACP,OAAO,CAACL,QAAD,CAAR,CAAlC;EACD;;EAED,KAAI,IAAIa,CAAC,GAAG,CAACX,KAAK,CAACC,WAAN,GAAoB,CAArB,IAA0B,EAAtC,EAA0CU,CAAC,GAAGX,KAAK,CAACC,WAAN,GAAoB,EAAlE,EAAsEU,CAAC,EAAvE,EAA2E;IACzE;IACA;IACAI,QAAQ,CAACE,IAAT,kCACoBH,QAAQ,CAACH,CAAD,CAAR,CAAYE,IAAZ,GAAmB,YAAnB,GAAkC,UADtD,kLAIwBC,QAAQ,CAACH,CAAD,CAAR,CAAYO,EAJpC,gBAI2CJ,QAAQ,CAACH,CAAD,CAAR,CAAYQ,KAJvD,uJAOuEL,QAAQ,CAACH,CAAD,CAAR,CAAYS,cAPnF,2LAY6CN,QAAQ,CAACH,CAAD,CAAR,CAAYU,IAZzD,qEAa8CP,QAAQ,CAACH,CAAD,CAAR,CAAYW,MAb1D,qEAc8CR,QAAQ,CAACH,CAAD,CAAR,CAAYY,QAd1D;EAmBD,CA1DmB,CA4DpB;;;EACAP,QAAQ,GAAGA,QAAQ,CAACQ,OAAT,CAAiB,mBAAjB,EAAsCT,QAAQ,CAACU,IAAT,CAAc,EAAd,CAAtC,CAAX;EACAT,QAAQ,GAAGA,QAAQ,CAACQ,OAAT,CAAiB,mBAAjB,EAAsCxB,KAAK,CAACC,WAAN,GAAoB,CAApB,GAAwBD,KAAK,CAACC,WAAN,GAAoB,CAA5C,GAAgD,CAAtF,CAAX;EACAe,QAAQ,GAAGA,QAAQ,CAACQ,OAAT,CAAiB,mBAAjB,EAAsCxB,KAAK,CAACC,WAAN,GAAoB,CAA1D,CAAX,CA/DoB,CAiEpB;;EACAV,SAAS,CAACmC,SAAV,GAAsBV,QAAtB;AACC;;AAAA,EAMD;;AACA,SAASW,UAAT,GAAsB;EACpB;EACA,IAAMT,EAAE,GAAGU,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwB,CAAxB,CAAX,CAFoB,CAIpB;;EACA,IAAMC,WAAW,GAAG5B,OAAO,CAACJ,WAAW,CAACyB,OAAZ,CAAoB,KAApB,EAA2BN,EAA3B,CAAD,CAA3B;EACA,IAAMC,KAAK,GAAG3B,QAAQ,CAACK,aAAT,CAAuB,IAAvB,CAAd;EACA,IAAImB,QAAQ,waASkBhB,KAAK,CAACC,WATxB,iQAkBA8B,WAAW,CAACZ,KAlBZ,0EAoBFY,WAAW,CAACnC,OApBV,iFAAZ,CAPoB,CAoCpB;;EACA,KAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACE,KAAN,CAAYU,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;IAC3C,IAAIX,KAAK,CAACE,KAAN,CAAYS,CAAZ,EAAeO,EAAf,KAAsBc,MAAM,CAACd,EAAD,CAAhC,EAAsC;MACpClB,KAAK,CAACE,KAAN,CAAYS,CAAZ,EAAeE,IAAf,GAAsB,IAAtB;MACA;IACD;EACF;;EAED,SAASoB,WAAT,CAAqBC,QAArB,EAA2C;IAAA,IAAZC,MAAY,uEAAH,CAAG;IACzC;IACA,IAAMC,aAAa,GAAG,EAAtB;;IAEA,KAAK,IAAIzB,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGuB,QAAQ,CAACtB,MAA7B,EAAqCD,EAAC,EAAtC,EAA0C;MACxC;MACA;MACAyB,aAAa,CAACnB,IAAd,gDAC8BkB,MAAM,GAAG,EADvC,mJAIgBD,QAAQ,CAACvB,EAAD,CAAR,CAAYU,IAJ5B,uBAI6Ca,QAAQ,CAACvB,EAAD,CAAR,CAAYY,QAJzD,sEAM+BW,QAAQ,CAACvB,EAAD,CAAR,CAAYf,OAN3C,sCAHwC,CAaxC;MACA;;MACA,IAAIsC,QAAQ,CAACvB,EAAD,CAAR,CAAYuB,QAAZ,CAAqBtB,MAArB,GAA8B,CAAlC,EAAqC;QACnCwB,aAAa,CAACnB,IAAd,CAAmBgB,WAAW,CAACC,QAAQ,CAACvB,EAAD,CAAR,CAAYuB,QAAb,EAAuBC,MAAM,GAAG,CAAhC,CAA9B;MACD;IACF,CAtBwC,CAwBzC;;;IACA,OAAOC,aAAa,CAACX,IAAd,CAAmB,EAAnB,CAAP;EACD,CAtEmB,CAwEpB;EACA;;;EACAlC,SAAS,CAACmC,SAAV,GAAsBV,QAAQ,CAACQ,OAAT,CAAiB,kBAAjB,EAAqCS,WAAW,CAACF,WAAW,CAACG,QAAb,CAAhD,CAAtB;AACD,EAED;;;AACA,SAASG,MAAT,GAAkB;EAChB;EACA,IAAMC,SAAS,GAAGV,QAAQ,CAACC,IAA3B,CAFgB,CAIhB;EACA;EACA;;EACA,IAAIS,SAAS,KAAK,EAAlB,EAAsB;IACpB;IACAxB,QAAQ,GAFY,CAGpB;EACD,CAJD,MAIO,IAAIwB,SAAS,CAACC,OAAV,CAAkB,SAAlB,KAAgC,CAApC,EAAuC;IAC5CvC,KAAK,CAACC,WAAN,GAAoB+B,MAAM,CAACM,SAAS,CAACR,SAAV,CAAoB,CAApB,CAAD,CAA1B;IACAhB,QAAQ;EACT,CAHM,MAGA;IACL;IACAa,UAAU;EACX;AACF;;AAAA,EAED;AACA;;AACAa,MAAM,CAACC,gBAAP,CAAwB,YAAxB,EAAsCJ,MAAtC;AAEAA,MAAM","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["const container = document.getElementById('root');\r\nconst ajax = new XMLHttpRequest();\r\nconst content = document.createElement('div');\r\nconst NEWS_URL = 'https://api.hnpwa.com/v0/news/1.json';\r\nconst CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json';\r\nconst store = {\r\n  currentPage: 1,\r\n  feeds: [],\r\n};\r\n\r\n// ajax 동작 수행처리 함수\r\nfunction getData(url) {\r\n  // 긁어올 페이지를 오픈\r\n  ajax.open('GET', url, false);\r\n  // 데이터를 전송\r\n  ajax.send();\r\n\r\n  // 함수처리의 결과물을 반환\r\n  return JSON.parse(ajax.response);\r\n}\r\n// 읽음처리 로직\r\nfunction makeFeeds(feeds) {\r\n  for (let i = 0; i < feeds.length; i++) {\r\n    feeds[i].read = false;\r\n  }\r\n\r\n  return feeds;\r\n}\r\n\r\n// 뉴스 제목\r\nfunction newsFeed() {\r\n  // 매번 페이지 전체 글들을 긁어오는것은 비효율적이므로, 읽은 글은 읽었다고 처리하고 저장하도록\r\nlet newsFeed = store.feeds;\r\n// ul 태그 안 쪽에 li a 태그를 10묶음 처리 해야하기 때문에 배열 이용\r\nconst newsList = [];\r\n// 템플릿\r\nlet template = `\r\n  <div class=\"bg-gray-600 min-h-screen\">\r\n  <div class=\"bg-white text-xl\">\r\n    <div class=\"mx-auto px-4\">\r\n      <div class=\"flex justify-between items-center py-6\">\r\n        <div class=\"flex justify-start\">\r\n          <h1 class=\"font-extrabold\">Hacker News</h1>\r\n        </div>\r\n        <div class=\"items-center justify-end\">\r\n          <a href=\"#/page/{{__prev_page__}}\" class=\"text-gray-500\">\r\n            Previous\r\n          </a>\r\n          <a href=\"#/page/{{__next_page__}}\" class=\"text-gray-500 ml-4\">\r\n            Next\r\n          </a>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  </div>\r\n  <div class=\"p-4 text-2xl text-gray-700\">\r\n    {{__news_feed__}}        \r\n  </div>\r\n  </div>\r\n`;\r\n\r\n// 최초실행시, news_url의 데이터를 가져옴\r\nif (newsFeed.length === 0) {\r\n  newsFeed = store.feeds = makeFeeds(getData(NEWS_URL));\r\n}\r\n\r\nfor(let i = (store.currentPage - 1) * 10; i < store.currentPage * 10; i++) {\r\n  // 목록 UI\r\n  // 읽은 적이 있으면, 배경이 빨강색으로 처리되도록\r\n  newsList.push(`\r\n    <div class=\"p-6 ${newsFeed[i].read ? 'bg-red-500' : 'bg-white'} mt-6 rounded-lg shadow-md transition-colors duration-500 hover:bg-green-100\">\r\n    <div class=\"flex\">\r\n      <div class=\"flex-auto\">\r\n        <a href=\"#/show/${newsFeed[i].id}\">${newsFeed[i].title}</a>  \r\n      </div>\r\n      <div class=\"text-center text-sm\">\r\n        <div class=\"w-10 text-white bg-green-300 rounded-lg px-0 py-2\">${newsFeed[i].comments_count}</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex mt-3\">\r\n      <div class=\"grid grid-cols-3 text-sm text-gray-500\">\r\n        <div><i class=\"fas fa-user mr-1\"></i>${newsFeed[i].user}</div>\r\n        <div><i class=\"fas fa-heart mr-1\"></i>${newsFeed[i].points}</div>\r\n        <div><i class=\"far fa-clock mr-1\"></i>${newsFeed[i].time_ago}</div>\r\n      </div>  \r\n    </div>\r\n  </div>  \r\n  `);\r\n}\r\n\r\n// 템플릿 안에 마킹해놓은 자리에 for문으로 만들어진 코드를 집어넣기\r\ntemplate = template.replace('{{__news_feed__}}', newsList.join(''));\r\ntemplate = template.replace('{{__prev_page__}}', store.currentPage > 1 ? store.currentPage - 1 : 1);\r\ntemplate = template.replace('{{__next_page__}}', store.currentPage + 1);\r\n\r\n// 덮어씌우기\r\ncontainer.innerHTML = template;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// 뉴스 내용\r\nfunction newsDetail() {\r\n  // hash를 알아내기(맨 앞의 #제거버젼)\r\n  const id = location.hash.substring(7);\r\n  \r\n  // content_url 변수에 있는 @id(임시)를 알아낸 id값으로 대체\r\n  const newsContent = getData(CONTENT_URL.replace('@id', id));\r\n  const title = document.createElement('h1');\r\n  let template = `\r\n    <div class=\"bg-gray-600 min-h-screen pb-8\">\r\n      <div class=\"bg-white text-xl\">\r\n        <div class=\"mx-auto px-4\">\r\n          <div class=\"flex justify-between items-center py-6\">\r\n            <div class=\"flex justify-start\">\r\n              <h1 class=\"font-extrabold\">Hacker News</h1>\r\n            </div>\r\n            <div class=\"items-center justify-end\">\r\n              <a href=\"#/page/${store.currentPage}\" class=\"text-gray-500\">\r\n                <i class=\"fa fa-times\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"h-full border rounded-xl bg-white m-6 p-4 \">\r\n        <h2>${newsContent.title}</h2>\r\n        <div class=\"text-gray-400 h-20\">\r\n          ${newsContent.content}\r\n        </div>\r\n\r\n        {{__comments__}}\r\n\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  // read 내용을 true처리하도록\r\n  for (let i = 0; i < store.feeds.length; i++) {\r\n    if (store.feeds[i].id === Number(id)) {\r\n      store.feeds[i].read = true;\r\n      break;\r\n    }\r\n  }\r\n\r\n  function makeComment(comments, called = 0) {\r\n    // 댓글을 배열을 이용해서 담기\r\n    const commentString = [];\r\n\r\n    for (let i = 0; i < comments.length; i++) {\r\n      // 배열에 html형식으로 작성\r\n      // 댓글에 댓글이 달릴때마다 indent 공간이 커지도록\r\n      commentString.push(`\r\n        <div style=\"padding-left: ${called * 40}px;\" class=\"mt-4\">\r\n          <div class=\"text-gray-400\">\r\n            <i class=\"fa fa-sort-up mr-2\"></i>\r\n            <strong>${comments[i].user}</strong> ${comments[i].time_ago}\r\n          </div>\r\n          <p class=\"text-gray-700\">${comments[i].content}</p>\r\n        </div>   \r\n      `);\r\n\r\n      // 대댓글 내용들을 재귀함수 형태로 push\r\n      // i번째 대댓글의 댓글이 존재하면\r\n      if (comments[i].comments.length > 0) {\r\n        commentString.push(makeComment(comments[i].comments, called + 1));\r\n      }\r\n    }\r\n\r\n    // push 내용을 하나의 문자열로 집어넣기\r\n    return commentString.join('');\r\n  }\r\n\r\n  // 글 내용 UI\r\n  // comments부분 인자로 newscontent의 comments 속성 사용\r\n  container.innerHTML = template.replace('{{__comments__}}', makeComment(newsContent.comments));\r\n}\r\n\r\n// 화면 전환을 위한 router\r\nfunction router() {\r\n  // hash 알아내기\r\n  const routePath = location.hash;\r\n\r\n  // routePath가 비어있을 때(hash가 비어있을 때) === 첫 진입\r\n  // '목록으로' 또한 hash가 비어있기 때문에 newsFeed로 연결됨\r\n  // location.hash의 값에 #만 존재하면 빈 값으로 처리됨\r\n  if (routePath === '') {\r\n    // 뉴스 제목 가져오기\r\n    newsFeed();\r\n    // 해당 문자열이 있으면 0이상의 위치값, 없으면 -1 반환\r\n  } else if (routePath.indexOf('#/page/') >= 0) { \r\n    store.currentPage = Number(routePath.substring(7));\r\n    newsFeed();\r\n  } else {\r\n    // 뉴스 글 가져오기\r\n    newsDetail();\r\n  }\r\n};\r\n\r\n// window객체\r\n// hashchange를 화면전환을 위한 트리거로 사용(router를 연결)\r\nwindow.addEventListener('hashchange', router);\r\n\r\nrouter();"]}