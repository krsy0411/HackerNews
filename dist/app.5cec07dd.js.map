{"version":3,"sources":["src/core/router.ts","src/core/view.ts","src/core/api.ts","src/config.ts","src/page/news-detail-view.ts","src/page/news-feed-view.ts","src/page/index.ts","src/app.ts"],"names":[],"mappings":";;;;;;AGAa,AFAb,IAAA,GEAa,CAAA,AFAb,QEAa,GAAW,sCAAX;AACA,AFDb,OECa,CAAA,WAAA,GAAc,wCAAd;AFDb,YAAA;EAOI,SAAA,IAAA,CAAY,WAAZ,EAAiC,QAAjC,EAAiD;IAC/C,IAAM,gBAAgB,GAAG,QAAQ,CAAC,cAAT,CAAwB,WAAxB,CAAzB,CAD+C,CAG/C;;AMVN,IAAA,ANWM,IAAG,CAAC,GMXV,GAAA,UNWM,EAAsB,GMX5B,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;ADAA,IAAA,ELYQ,MAAM,UKZd,GAAA,OAAA,CAAA,OLYQ,aKZR,CAAA;ACCA,IAAA,ANYO,CAN8C,CAQ/C,IMdN,GAAA,OAAA,CAAA,QAAA,CAAA,EAGA;ADJQ,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,gBAAA,EAAA;EAAA,UAAA,EAAA,IAAA;ACMR,EDNQ,ECMF,ANUA,CKhBE,EAAA,ECMG,ANUA,GMVU,MNUf,GAAiB,CKhBf,eLgBF;EMTJ,ENUI,AKjBE,KLiBG,EKjBH,ECOK,EAAE,CADM,CNWf,GAAgB,MKjBd,CAAA,CLiBF,iBKjBE,CAAA,CAAA,OAAA;ECQN,ADRa,ELkBT,GMVC,EAAE,ANUE,cAAL,GAAsB,QAAtB;AMZe,ADNb,CCMR,ADNQ,GLmBF,KAAK,QAAL,GAAgB,EAAhB;AMFN,ENGK,IMHC,CAAC,KAAP,GAAe,KAAf;AAEA,ADlBA,ICkBM,ADlBN,MCkBY,GAAW,IAAI,GDlB3B,GAAA,ECkB2B,CAAA,IDlB3B,CAAA,ECkBuB,EAAvB,cDlBA,CAAA;ACmBA,APjBA,ECmBc,EMFR,APjBN,ECmBc,CAAA,GDnBd,MOiBkB,ANEJ,CAAA,EMFO,IAAI,INEX,EMFW,CAAA,ANErB,YMFiB,ANEjB,CMFkC,MAAjB,CAArB;AACA,APlBA,AMFQ,ICoBF,ANEE,EKtBA,CAAA,ELsBK,SMFO,ANEZ,CAAe,EMFA,ADpBf,CAAA,GCoBmB,GNEnB,CKtBA,ECoBmB,ANEQ,AKtB3B,CCoBmB,INEa,SKtBhC,CCoBe,CAAmB,ADpBlC,GLsBA,GMFe,CAAvB;AAEA,APpBA,EMFQ,ELuBA,EMDF,CAAC,ENCM,GDrBb,AMFQ,EAAA,IAAA,GCsBR,CAAsB,CNCd,GAAsB,KAAK,GMDnC,KNCQ;AMCR,EPnBI,ACmBG,AKxBC,CLqBM,EKrBN,CCwBF,CAAC,ADxBC,INKJ,MAAA,EOmBJ,CAAoB,APnBhB,EMLI,MCwBR,EAA8B,YAA9B;AACA,IPnBM,AMNE,ECyBF,CAAC,IDzBC,QCyBR,CAAoB,MDzBZ,CAAA,CCyBR,EAA8B,aDzBtB,CCyBR,ADzBQ,CAAA,EC0BR,KD1BQ;EL0BM,AK1BC,ENOT,ECmBQ,CAAA,SAAA,CAAA,OAAA,GAAV,UAAkB,UAAlB,EAAoC;AMCxC,AD3BQ,CAAA,GNQF,ACmBA,EMAA,CAAC,ENAI,GMAX,KNAM,CAAc,IAAd,CAAmB,UAAnB;EACD,CAFS,CDjBR,MAAM,CAAC,gBAAP,CAAwB,YAAxB,EAAsC,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAtC;IAEA,KAAK,UAAL,GAAkB,EAAlB;ECmBQ,EDlBR,ECkBQ,CAAA,EDlBH,OCkBG,CAAA,GDlBR,GAAmB,CCkBX,GDlBR,ACkBF,YAAA;EDjBC,ECkBC,IAAM,QAAQ,GAAG,KAAK,QAAL,CAAc,IAAd,CAAmB,EAAnB,CAAjB;IACA,KAAK,aAAL;AC/BN,EFcI,EEdJ,ADgCM,GChCN,CFcI,CAAA,ECkBS,ODlBT,CAAA,ACkBE,cDlBF,GAAA,UAAe,IAAf,EAAyB;AEd7B,EDiCK,CAJS,CDdR,KAAK,WAAL,GAAmB;AEfzB,MFe2B,IAAI,EEf/B,AFeiC,EAAR;EEXrB,AD+BU,IDpBuB,ACoBvB,CAAA,GDpB2B,CEXrC,CFWqC,EEXrC,CAAY,CD+BF,CAAA,CC/BV,EAAuB,YD+Bb,GAAV,UAA0B,GAA1B,EAAuC,KAAvC,EAAoD;IC9BlD,AFUmB,ACqBnB,CDrBA,IEVK,AD+BA,IC/BL,GAAY,IAAI,GD+BhB,GAAsB,KAAK,GC/Bf,EAAZ,SD+BsB,CAAoB,OAApB,CAA4B,OAAA,MAAA,CAAO,GAAP,EAAU,MAAV,CAA5B,EAA8C,KAA9C,CAAtB;AGtCN,ACAA,ELkBK,ACqBA,CDvBD,ACqBU,CC7BR,AERN,ACAA,KHQW,CERX,ACAA,EHQM,CERN,ACAA,EHQiB,GAAX,UERN,ACAA,CDAA,ACAA,ODAA,ACAA,CDAA,ACAA,cDAA,ACAA,CDAA,ACAA,CDAA,ACAA;EHSK;AERL,ACAA,ELmBI,ACqBQ,EGxCZ,ACAA,EJwCY,CAAA,CDrBR,CAAA,AInBJ,ACAA,GDAA,ACAA,IJwCY,CAAA,CDrBR,CAAA,AInBJ,ACAA,CDAA,ACAA,UJwCY,CDrBR,ECqBA,AGxCJ,ACAA,CLmBI,AInBJ,ACAA,ULmBiB,CCqBb,GDrBA,EAA0B,IAA1B,EAAmC;EETnC,EFUE,ACqBA,CC/BF,CAAA,GFUO,ACqBA,MC/BP,CAAA,CD+BE,EDrBA,CAAgB,ACqBA,EAAhB,EDrBA,CAAqB,CEVvB,GAAA,YAAA;AERJ,ACAA,EJwCK,CAFO,CC7BN,AETN,ACAA,ELkB4B,IAAI,EAAA,AIlBhC,ACAA,GDAA,ACAA,CLkB2B,MIlB3B,ACAA,CDAA,ACAA,WDAA,ACAA,CDAA,ACAA;IHUM,EFQ4B,GERvB,CFQ2B,EAAA,CERhC,CAAU,IAAV,CAAe,KAAf,EAAsB,KAAK,GAA3B,EAAgC,KAAhC,EAFF,CAGE;AERN,ACDA,EJ2CE,ED3ByB,AIfrB,ACDA,CLgBA,IC2BJ,GG1CY,ACDA,CJ2CZ,EG1CsB,ACDP,wsBAAjB,+EDCA;AHNA,CAAA,CDsBK,CAFD,ACpBJ,CCeM,KAAK,IAAL,CAAU,IAAV,GAJF,CAME;AEkBN,ACLA,IDKA,ACLA,YAAA,EDKA;AAAA,ACLA,ELNI,EENE,IFMF,CAAA,EENS,IAAI,CAAC,EFMd,CAAA,EENS,CAAW,EFMpB,GENyB,AFMzB,IENoB,CAAU,OFM9B,CENS,CAAP;AEiBN,ACLA,EHXK,CARD,OEwBJ,ACLA,MLNI,AIWJ,ACLA,CLLM,CIUN,ACLA;EDK4C,ACLF,SDKE,ACLF,CDKE,ACLF,YAAA,EDKE,ACLF,EDKE,ICLF,CAAA,CDKE,CAAA;EFf1C,OAAA,GAAA;AAlBF,CAAA,CEkCI,ACFA,CHhCJ,CFwBM,IAAM,GIUR,ACFA,MLRiB,GAAG,GKQpB,CAAY,CDEZ,CAAY,EJVgB,CAAC,IAA3B,CAFF,CAGE,AKOF,EDEA,ACF+B,EDEA;ICF/B,IAAA,GDIE,ECJF,GAEE,CDEA,CAAA,IAAA,ACFA,CDEA,ACFA,IDEA,ACFA,CAAA,CDEM,GCFN,EAAM,MDEN,EAAmB,GCFnB,EAAmB,GDEnB,KAA4B,ACF5B,KAA4B,IAF9B;AHhCS,EEqCR,EJXC,GE1BO,CAAA,AF0BJ,GE1BI,GAAA,GAAA,AF0BK,KAAK,EAAd,IAAoB,KAAK,WAA5B,EAAyC;IKUzC,ELTE,GKSE,CAAC,CLTE,EKSP,GAAW,IAAI,ELTb,CAAiB,EKSJ,CAAA,CLTb,CAAsB,MAAtB,GKSS,CAAgB,QAAA,CAAA,QAAhB,CAAX,CAJ6B,CAK7B;AHjBN,EEmBI,EFnBJ,AFQO,WERP,CEmBI,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AFnBJ,IEoBM,ACFA,IDEM,CCFF,CDEI,ACFH,GDEM,ECFX,GAAa,GDEM,CAAC,ECFD,CAAC,CDET,CAAc,GCFZ,CAAa,KDEf,ACFX,CDEmC,ACRN,CDQlB,ACAX,CDAA;AFpBN,IEqBM,IAAM,EFrBZ,CEqBe,GAAG,EFrBlB,EAAA,AEqBsB,KAAA,CAAA,aAAJ,CAAkB,QAAA,CAAA,WAAA,CAAY,OAAZ,CAAoB,KAApB,EAA2B,EAA3B,CAAlB,CAAZ;EFrB2B,EEsB3B,ACDA,ELXA,EIYM,ACDF,GHrBuB,AFUH,CEVG,CGqBnB,CAAC,CLXe,EAAA,CIYR,CCDZ,CLXoB,AKWT,CDCgB,EFtBJ,CEsBO,CFtBP,AEsBQ,CCD/B,ELXoB,CAAA,EEVG,AGqBD,CHrBC,AEsBI,ACD/B,ELX6B,AIY7B,ACD6B,ULXL,CAAA,EAAe,EAAA,GAAA,EAAA,CAAA,IAAA,EAAvC,EAAuC,CAAA,EAAA,CAAA,IAAvC,EAAuC,EAAA,GAAA,EAAA,CAAA,IAAA,EAAvC,EAAyC;MKYvC,ELZG,GKYC,CLZK,AKYJ,KAAL,GAAa,CLZK,GAAA,EAAA,AKYC,CLZD,AKYE,KLZjB,AKYU,CAAa,KAAb,GAAqB,KAAI,CAAC,GAAL,CAAS,OAAT,EAAlC;EHtBR,EEwBM,KAAI,EFxBV,EEwBc,CAAC,GAAC,CAAV,EAAa,CAAC,CFxBpB,EEwBuB,CFxBvB,KEwB6B,CAAC,KAAP,CAAa,KAAb,CAAmB,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","file":"app.5cec07dd.js","sourceRoot":"..","sourcesContent":["import { RouteInfo } from '../types';\r\nimport View from './view';\r\n\r\nexport default class Router {\r\n    routeTable: RouteInfo[];\r\n    defaultPage: RouteInfo | null;\r\n    constructor() {\r\n      // window객체\r\n      // hashchange를 화면전환을 위한 트리거로 사용\r\n      // route메소드를 인자로 연결. Router의 인스턴스로 사용하기 위해 bind로 고정\r\n      window.addEventListener('hashchange', this.route.bind(this));\r\n  \r\n      this.routeTable = [];\r\n      this.defaultPage = null;\r\n    }\r\n  \r\n    setDefaultPage(page: View): void {\r\n      this.defaultPage = { path: '', page };\r\n    }\r\n  \r\n    addRoutePath(path:string, page:View): void {\r\n      this.routeTable.push({path, page});\r\n    }\r\n  \r\n    route() {\r\n      // hash 알아내기\r\n      const routePath = location.hash;\r\n      // defaultpage 체크\r\n      if(routePath === '' && this.defaultPage) {\r\n        this.defaultPage.page.render();\r\n      }\r\n  \r\n      for (const routeInfo of this.routeTable) {\r\n        if (routePath.indexOf(routeInfo.path) >= 0) {\r\n          routeInfo.page.render();\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ","export default abstract class View {\r\n    private template: string;\r\n    // replace의 대상이 되는 템플릿\r\n    private renderTemplate: string;\r\n    private container: HTMLElement;\r\n    private htmlList: string[];\r\n  \r\n    constructor(containerId: string, template: string) {\r\n      const containerElement = document.getElementById(containerId);\r\n  \r\n      // containerElement가 null로 반환될 수 있기에 예외처리\r\n      if(!containerElement) {\r\n        throw '최상위 컨테이너가 없어 UI를 진행하지 못합니다'\r\n      }\r\n  \r\n      // 초기화\r\n      this.container = containerElement;\r\n      this.template = template;\r\n      this.renderTemplate = template;\r\n      this.htmlList = [];\r\n    }\r\n  \r\n    protected updateView(): void {\r\n        this.container.innerHTML = this.renderTemplate;\r\n        this.renderTemplate = this.template;\r\n      }\r\n    \r\n    protected addHtml(htmlString: string): void {\r\n      this.htmlList.push(htmlString);\r\n    }\r\n    \r\n    protected getHtml(): string {\r\n      const snapshot = this.htmlList.join('');\r\n      this.clearHtmlList();\r\n      return snapshot;\r\n    }\r\n  \r\n    protected setTemplateData(key: string, value: string): void {\r\n      this.renderTemplate = this.renderTemplate.replace(`{{__${key}__}}`, value);\r\n    }\r\n  \r\n    private clearHtmlList(): void {\r\n      this.htmlList = [];\r\n    }\r\n  \r\n  \r\n      // 자식 class들에게 render기능을 구현하도록 강제시키기\r\n      abstract render(): void;\r\n  }","import { NewsDetail, NewsFeed } from '../types';\r\n\r\nexport class Api {\r\n    ajax: XMLHttpRequest;\r\n    url:string;\r\n  \r\n    constructor(url: string) {\r\n      this.ajax = new XMLHttpRequest();\r\n      this.url = url;\r\n    }\r\n  \r\n    getRequest<AjaxResponse>(): AjaxResponse {\r\n      // 긁어올 페이지를 오픈\r\n      this.ajax.open('GET', this.url, false);\r\n      // 데이터를 전송\r\n      this.ajax.send();\r\n  \r\n      // 함수처리의 결과물을 반환\r\n      return JSON.parse(this.ajax.response);   \r\n    }\r\n  }\r\n  \r\nexport class NewsFeedApi extends Api {\r\n    getData(): NewsFeed[] {\r\n      return this.getRequest<NewsFeed[]>();\r\n    }\r\n}\r\n  \r\nexport class NewsDetailApi extends Api {\r\n    getData(): NewsDetail {\r\n      return this.getRequest<NewsDetail>();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","export const NEWS_URL = 'https://api.hnpwa.com/v0/news/1.json';\r\nexport const CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json';","import View from '../core/view';\r\nimport {NewsDetailApi} from '../core/api';\r\nimport {NewsDetail, NewsComment} from '../types';\r\nimport {CONTENT_URL} from '../config';\r\n \r\n\r\nconst template:string = `\r\n  <div class=\"bg-gray-600 min-h-screen\">\r\n    <div class=\"bg-white text-xl\">\r\n      <div class=\"mx-auto px-4\">\r\n        <div class=\"flex justify-between items-center py-6\">\r\n          <div class=\"flex justify-start\">\r\n            <h1 class=\"font-extrabold\">Hacker News</h1>\r\n          </div>\r\n          <div class=\"items-center justify-end\">\r\n            <a href=\"#/page/{{__currentPage__}}\" class=\"text-gray-500\">\r\n              <i class=\"fa fa-times\"></i>\r\n            </a>\r\n          </div>\r\n        </div> \r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"h-full border rounded-xl bg-white m-6 p-4\">\r\n      <h2>{{__title__}}</h2>\r\n      <div class=\"text-gray-400 h-20\">\r\n        {{__content__}}\r\n      </div>   \r\n\r\n      {{__comments__}}\r\n\r\n    </div>\r\n  </div>\r\n`;\r\n\r\nexport default class NewsDetailView extends View {\r\n    constructor(containerId: string) {\r\n  \r\n      super(containerId, template);\r\n    }\r\n  \r\n    render() {\r\n      const id = location.hash.substring(7);\r\n      const api = new NewsDetailApi(CONTENT_URL.replace('@id', id));\r\n      const newsDetail: NewsDetail = api.getData();\r\n  \r\n      for(let i=0; i < window.store.feeds.length; i++) {\r\n        if (window.store.feeds[i].id === Number(id)) {\r\n            window.store.feeds[i].read = true;\r\n          break;\r\n        }\r\n      }\r\n      this.setTemplateData('{{__comments__}}', this.makeComment(newsDetail.comments));\r\n      this.setTemplateData('currentPage', String(window.store.currentPage));\r\n      this.setTemplateData('title', newsDetail.title);\r\n      this.setTemplateData('content', newsDetail.content);\r\n      this.updateView();\r\n    }\r\n    \r\n  \r\n    // 댓글기능\r\n    private makeComment(comments: NewsComment[]): string {\r\n      for (let i = 0; i < comments.length; i++) {\r\n        const comment: NewsComment = comments[i];\r\n  \r\n        // 배열에 html형식으로 작성\r\n        // 댓글에 댓글이 달릴때마다 indent 공간이 커지도록\r\n        this.addHtml(`\r\n          <div style=\"padding-left: ${comment.level * 40}px;\" class=\"mt-4\">\r\n            <div class=\"text-gray-400\">\r\n              <i class=\"fa fa-sort-up mr-2\"></i>\r\n              <strong>${comment.user}</strong> ${comment.time_ago}\r\n            </div>\r\n            <p class=\"text-gray-700\">${comment.content}</p>\r\n          </div>   \r\n        `);\r\n  \r\n        // 대댓글 내용들을 재귀함수 형태로 push\r\n        // i번째 대댓글의 댓글이 존재하면\r\n        if (comment.comments.length > 0) {\r\n          this.addHtml(this.makeComment(comment.comments));\r\n        }\r\n      }\r\n  \r\n      // push 내용을 하나의 문자열로 집어넣기\r\n      return this.getHtml();\r\n    }\r\n  \r\n  }","import View from '../core/view';\r\nimport {NewsFeedApi} from '../core/api';\r\nimport {NewsFeed} from '../types';\r\nimport {NEWS_URL} from '../config';\r\n\r\nconst template = `\r\n<div class=\"bg-gray-600 min-h-screen\">\r\n<div class=\"bg-white text-xl\">\r\n<div class=\"mx-auto px-4\">\r\n      <div class=\"flex justify-between items-center py-6\">\r\n        <div class=\"flex justify-start\">\r\n          <h1 class=\"font-extrabold\">Hacker News</h1>\r\n        </div>\r\n        <div class=\"items-center justify-end\">\r\n          <a href=\"#/page/{{__prev_page__}}\" class=\"text-gray-500\">\r\n            Previous\r\n          </a>\r\n          <a href=\"#/page/{{__next_page__}}\" class=\"text-gray-500 ml-4\">\r\n            Next\r\n          </a>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  </div>\r\n  <div class=\"p-4 text-2xl text-gray-700\">\r\n    {{__news_feed__}}        \r\n  </div>\r\n  </div>\r\n`;\r\n\r\nexport default class NewsFeedView extends View {\r\n    private api: NewsFeedApi;\r\n    private feeds: NewsFeed[];\r\n  \r\n    constructor(containerId: string) {\r\n      \r\n      super(containerId, template);\r\n  \r\n      this.api = new NewsFeedApi(NEWS_URL);\r\n      // 매번 페이지 전체 글들을 긁어오는것은 비효율적이므로, 읽은 글은 읽었다고 처리하고 저장하도록\r\n      this.feeds = window.store.feeds;\r\n  \r\n      // 최초실행시, news_url의 데이터를 가져옴\r\n      if (this.feeds.length === 0) {\r\n        this.feeds = window.store.feeds = this.api.getData();\r\n        this.makeFeeds();\r\n      }\r\n    \r\n  \r\n    }\r\n  \r\n    render(): void {\r\n      // 1페이지가 디폴트 페이지\r\n      window.store.currentPage = Number(location.hash.substring(7) || 1);\r\n        for(let i = (window.store.currentPage - 1) * 10; i < window.store.currentPage * 10; i++) {\r\n          const {id, title, comments_count, user, points, time_ago, read} = this.feeds[i];\r\n          // 목록 UI\r\n          // 읽은 적이 있으면, 배경이 빨강색으로 처리되도록\r\n          this.addHtml(`\r\n            <div class=\"p-6 ${read ? 'bg-red-500' : 'bg-white'} mt-6 rounded-lg shadow-md transition-colors duration-500 hover:bg-green-100\">\r\n            <div class=\"flex\">\r\n              <div class=\"flex-auto\">\r\n                <a href=\"#/show/${id}\">${title}</a>  \r\n              </div>\r\n              <div class=\"text-center text-sm\">\r\n                <div class=\"w-10 text-white bg-green-300 rounded-lg px-0 py-2\">${comments_count}</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex mt-3\">\r\n              <div class=\"grid grid-cols-3 text-sm text-gray-500\">\r\n                <div><i class=\"fas fa-user mr-1\"></i>${user}</div>\r\n                <div><i class=\"fas fa-heart mr-1\"></i>${points}</div>\r\n                <div><i class=\"far fa-clock mr-1\"></i>${time_ago}</div>\r\n              </div>  \r\n            </div>\r\n          </div>  \r\n          `);\r\n      }\r\n  \r\n      // 템플릿 안에 마킹해놓은 자리에 for문으로 만들어진 코드를 집어넣기\r\n      this.setTemplateData('news_feed', this.getHtml());\r\n      this.setTemplateData('prev_page', String(window.store.currentPage > 1 ? window.store.currentPage - 1 : 1));\r\n      this.setTemplateData('next_page', String(window.store.currentPage + 1));\r\n      \r\n      this.updateView();\r\n    }\r\n  \r\n    // 읽음처리 로직\r\n    makeFeeds(): void {\r\n      for (let i = 0; i < this.feeds.length; i++) {\r\n        this.feeds[i].read = false;\r\n      }\r\n    }\r\n  }","export {default as NewsDetailView} from './news-detail-view';\r\nexport {default as NewsFeedView} from './news-feed-view';","import Router from './core/router';\r\nimport {NewsDetailView, NewsFeedView} from './page';\r\nimport {Store} from './types'\r\n\r\n// const container: HTMLElement | null = document.getElementById('root');\r\n\r\nconst store: Store = {\r\n  currentPage: 1,\r\n  feeds: [],\r\n};\r\n\r\ndeclare global {\r\n  interface Window {\r\n    store: Store;\r\n  }\r\n}\r\n\r\nwindow.store = store;\r\n\r\nconst router: Router = new Router();\r\nconst newsFeedView = new NewsFeedView('root');\r\nconst newsDetailView = new NewsDetailView('root');\r\n\r\nrouter.setDefaultPage(newsFeedView);\r\n\r\nrouter.addRoutePath('./page', newsFeedView);\r\nrouter.addRoutePath('./page', newsDetailView);\r\n//최초 진입시 라우터 함수 직접 실행(처음엔 혼자 작동하지 X)\r\nrouter.route();\r\n"]}